package com.alsb.business;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;

import javax.ejb.MessageDrivenBean;
import javax.jms.BytesMessage;
import javax.jms.JMSException;
import javax.jms.MessageListener;
import javax.jms.Message;
import weblogic.ejb.GenericMessageDrivenBean;
import weblogic.ejbgen.MessageDriven;

/**
 * GenericMessageDrivenBean subclass automatically generated by Workshop.
 *
 * Please complete the onMessage method and review the MessageDriven annotation to 
 * ensure that the settings match your bean's intended use.
 */
@MessageDriven(ejbName = "BinaryMDB", 
		destinationJndiName = "jms.BinaryFileTopic", 
		destinationType = "javax.jms.Topic")
public class BinaryMDB extends GenericMessageDrivenBean implements
		MessageDrivenBean, MessageListener {
	private static final long serialVersionUID = 1L;
	private static final boolean VERBOSE = true;

	/**
	  * Retrieve the BytesMessage and save that data as a file
	  */
	public void onMessage(Message msg) {
		BytesMessage bm = (BytesMessage) msg;
	      try {
	         long length = bm.getBodyLength();
	         byte[] binaryData = new byte[(int)length];
	         int numRead = bm.readBytes(binaryData);
	         // Create a temporary file on the local file system.
	         File outputFile = File.createTempFile("mdb_", "xxx");
	         log("Created the file: " + outputFile.getAbsolutePath() + 
	               " with a file size of " + numRead + " bytes");
	         FileOutputStream fos = new FileOutputStream(outputFile);
	         fos.write(binaryData);
	         fos.close();
	      } catch(IOException ex) {
	         ex.printStackTrace();
	      } catch(JMSException ex) {
	         System.err.println("An exception occurred: "+ex.getMessage());
	      }
	}
	
	private void log(String s) {
		if (VERBOSE) System.out.println(s);
	}
}